#include <stdio.h>

int main() {
    int processes[] = {0, 1, 2, 3, 4};
    int allocation[5][3] = {
        {0, 1, 0},
        {2, 0, 0},
        {3, 0, 2},
        {2, 1, 1},
        {0, 0, 2}
    };
    int max[5][3] = {
        {7, 5, 3},
        {3, 2, 2},
        {9, 0, 2},
        {2, 2, 2},
        {4, 3, 3}
    };
    int available[3] = {3, 3, 2};
    int need[5][3];
    int finish[5] = {0, 0, 0, 0, 0};
    int safeSeq[5];
    int work[3];
    int count = 0;

    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 3; j++) {
            need[i][j] = max[i][j] - allocation[i][j];
        }
    }

    for (int i = 0; i < 3; i++) {
        work[i] = available[i];
    }

    while (count < 5) {
        int found = 0;
        for (int p = 0; p < 5; p++) {
            if (finish[p] == 0) {
                int j;
                for (j = 0; j < 3; j++) {
                    if (need[p][j] > work[j]) {
                        break;
                    }
                }
                if (j == 3) {
                    for (int k = 0; k < 3; k++) {
                        work[k] += allocation[p][k];
                    }
                    safeSeq[count++] = p;
                    finish[p] = 1;
                    found = 1;
                }
            }
        }
        if (found == 0) {
            printf("System is not in a safe state\n");
            return 0;
        }
    }

    printf("System is in a safe state.\nSafe sequence is: ");
    for (int i = 0; i < 5; i++) {
        printf("%d ", safeSeq[i]);
    }
    printf("\n");
    return 0;
}
